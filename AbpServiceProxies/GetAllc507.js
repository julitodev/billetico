/* This file is automatically generated by ABP framework to use MVC Controllers from JavaScript. */

var abp = abp || {};
abp.services = abp.services || {};

// module 'app'
(function(){

  abp.services.app = abp.services.app || {};

  // controller 'tokenAuth'
  (function(){

    abp.services.app.tokenAuth = abp.services.app.tokenAuth || {};

    // action 'authenticate'
    abp.services.app.tokenAuth.authenticate = function(model, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/TokenAuth/Authenticate',
        type: 'POST',
        data: JSON.stringify(model)
      }, ajaxParams));;
    };

    // action 'authenticate2FA'
    abp.services.app.tokenAuth.authenticate2FA = function(model, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/TokenAuth/Authenticate2FA',
        type: 'POST',
        data: JSON.stringify(model)
      }, ajaxParams));;
    };

    // action 'validate2FAOTP'
    abp.services.app.tokenAuth.validate2FAOTP = function(model, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/TokenAuth/Validate2FAOTP',
        type: 'POST',
        data: JSON.stringify(model)
      }, ajaxParams));;
    };

    // action 'authenticatebyPartyId'
    abp.services.app.tokenAuth.authenticatebyPartyId = function(model, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/TokenAuth/AuthenticatebyPartyId',
        type: 'POST',
        data: JSON.stringify(model)
      }, ajaxParams));;
    };

    // action 'getExternalAuthenticationProviders'
    abp.services.app.tokenAuth.getExternalAuthenticationProviders = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/TokenAuth/GetExternalAuthenticationProviders',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'externalAuthenticate'
    abp.services.app.tokenAuth.externalAuthenticate = function(model, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/TokenAuth/ExternalAuthenticate',
        type: 'POST',
        data: JSON.stringify(model)
      }, ajaxParams));;
    };

  })();

  // controller 'wishList'
  (function(){

    abp.services.app.wishList = abp.services.app.wishList || {};

    // action 'getCount'
    abp.services.app.wishList.getCount = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WishList/GetCount',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.wishList.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WishList/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.wishList.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WishList/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.wishList.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WishList/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.wishList.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WishList/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.wishList['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WishList/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

  })();

  // controller 'user'
  (function(){

    abp.services.app.user = abp.services.app.user || {};

    // action 'isUserMigrated'
    abp.services.app.user.isUserMigrated = function(email, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/IsUserMigrated' + abp.utils.buildQueryString([{ name: 'email', value: email }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getUserInfo'
    abp.services.app.user.getUserInfo = function(userId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetUserInfo' + abp.utils.buildQueryString([{ name: 'userId', value: userId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'updateUserInfo'
    abp.services.app.user.updateUserInfo = function(firstName, surname, phoneNumber, userId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/UpdateUserInfo' + abp.utils.buildQueryString([{ name: 'firstName', value: firstName }, { name: 'surname', value: surname }, { name: 'phoneNumber', value: phoneNumber }, { name: 'userId', value: userId }]) + '',
        type: 'PUT'
      }, ajaxParams));;
    };

    // action 'setasDefaultBillingAddress'
    abp.services.app.user.setasDefaultBillingAddress = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/SetasDefaultBillingAddress' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'setasDefaultShippingAddress'
    abp.services.app.user.setasDefaultShippingAddress = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/SetasDefaultShippingAddress' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'addAddress'
    abp.services.app.user.addAddress = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/AddAddress',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'updateAddress'
    abp.services.app.user.updateAddress = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/UpdateAddress',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'setUpdateAddress'
    abp.services.app.user.setUpdateAddress = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/SetUpdateAddress',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'deleteAddress'
    abp.services.app.user.deleteAddress = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/DeleteAddress' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setDeleteAddress'
    abp.services.app.user.setDeleteAddress = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/SetDeleteAddress' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getUserAddress'
    abp.services.app.user.getUserAddress = function(userId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetUserAddress' + abp.utils.buildQueryString([{ name: 'userId', value: userId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getUserAddressById'
    abp.services.app.user.getUserAddressById = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetUserAddressById' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getUserByEmailAddress'
    abp.services.app.user.getUserByEmailAddress = function(email, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetUserByEmailAddress' + abp.utils.buildQueryString([{ name: 'email', value: email }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getUserShippingAddress'
    abp.services.app.user.getUserShippingAddress = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetUserShippingAddress',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getUserBillingAddress'
    abp.services.app.user.getUserBillingAddress = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetUserBillingAddress',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.user.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.user.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'setUser'
    abp.services.app.user.setUser = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/SetUser',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.user['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.user.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getRoles'
    abp.services.app.user.getRoles = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetRoles',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'changeLanguage'
    abp.services.app.user.changeLanguage = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/ChangeLanguage',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'changePassword'
    abp.services.app.user.changePassword = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/ChangePassword',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'resetPassword'
    abp.services.app.user.resetPassword = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/ResetPassword',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.user.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetAll' + abp.utils.buildQueryString([{ name: 'keyword', value: input.keyword }, { name: 'isActive', value: input.isActive }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'isVerifiedUser'
    abp.services.app.user.isVerifiedUser = function(userId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/IsVerifiedUser' + abp.utils.buildQueryString([{ name: 'userId', value: userId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'subscribe'
    abp.services.app.user.subscribe = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/Subscribe',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

  })();

  // controller 'shoppingCart'
  (function(){

    abp.services.app.shoppingCart = abp.services.app.shoppingCart || {};

    // action 'processShoppingCart'
    abp.services.app.shoppingCart.processShoppingCart = function(shoppingCartDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShoppingCart/ProcessShoppingCart',
        type: 'POST',
        data: JSON.stringify(shoppingCartDto)
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.shoppingCart.getById = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShoppingCart/GetById' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.shoppingCart.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShoppingCart/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'joinShoppingCart'
    abp.services.app.shoppingCart.joinShoppingCart = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShoppingCart/JoinShoppingCart',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'mergeContextShoppingCart'
    abp.services.app.shoppingCart.mergeContextShoppingCart = function(sessionCart, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShoppingCart/MergeContextShoppingCart',
        type: 'POST',
        data: JSON.stringify(sessionCart)
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.shoppingCart.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShoppingCart/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'addItem'
    abp.services.app.shoppingCart.addItem = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShoppingCart/AddItem',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'removeItem'
    abp.services.app.shoppingCart.removeItem = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShoppingCart/RemoveItem' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'getProductById'
    abp.services.app.shoppingCart.getProductById = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShoppingCart/GetProductById' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'updateQuantityInShoppingCart'
    abp.services.app.shoppingCart.updateQuantityInShoppingCart = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShoppingCart/UpdateQuantityInShoppingCart',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.shoppingCart.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShoppingCart/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.shoppingCart.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShoppingCart/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.shoppingCart['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShoppingCart/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

  })();

  // controller 'shippingManager'
  (function(){

    abp.services.app.shippingManager = abp.services.app.shippingManager || {};

    // action 'updateOrderStatus'
    abp.services.app.shippingManager.updateOrderStatus = function(orderNo, orderStatus, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingManager/UpdateOrderStatus' + abp.utils.buildQueryString([{ name: 'orderNo', value: orderNo }]) + '',
        type: 'PUT',
        data: JSON.stringify(orderStatus)
      }, ajaxParams));;
    };

    // action 'setOrderStatus'
    abp.services.app.shippingManager.setOrderStatus = function(orderNo, orderStatus, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingManager/SetOrderStatus' + abp.utils.buildQueryString([{ name: 'orderNo', value: orderNo }]) + '',
        type: 'POST',
        data: JSON.stringify(orderStatus)
      }, ajaxParams));;
    };

    // action 'addOrUpdateOrderShippingItemShippingStatus'
    abp.services.app.shippingManager.addOrUpdateOrderShippingItemShippingStatus = function(shippingStatusUpdate, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingManager/AddOrUpdateOrderShippingItemShippingStatus',
        type: 'POST',
        data: JSON.stringify(shippingStatusUpdate)
      }, ajaxParams));;
    };

    // action 'addOrderItemsToShipping'
    abp.services.app.shippingManager.addOrderItemsToShipping = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingManager/AddOrderItemsToShipping',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getTrackingInfo'
    abp.services.app.shippingManager.getTrackingInfo = function(trackingCode, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingManager/GetTrackingInfo' + abp.utils.buildQueryString([{ name: 'trackingCode', value: trackingCode }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getByOrderItemId'
    abp.services.app.shippingManager.getByOrderItemId = function(orderItemId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingManager/GetByOrderItemId' + abp.utils.buildQueryString([{ name: 'orderItemId', value: orderItemId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'searchOrderShippings'
    abp.services.app.shippingManager.searchOrderShippings = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingManager/SearchOrderShippings',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'buyShipping'
    abp.services.app.shippingManager.buyShipping = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingManager/BuyShipping',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'calculateShippingRates'
    abp.services.app.shippingManager.calculateShippingRates = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingManager/CalculateShippingRates',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getOptimalShippingPackage'
    abp.services.app.shippingManager.getOptimalShippingPackage = function(shippingAddress, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingManager/GetOptimalShippingPackage' + abp.utils.buildQueryString([{ name: 'userId', value: shippingAddress.userId }, { name: 'addressId', value: shippingAddress.addressId }, { name: 'isDefault', value: shippingAddress.isDefault }, { name: 'type', value: shippingAddress.type }, { name: 'address.FirstName', value: shippingAddress.address.FirstName }, { name: 'address.LastName', value: shippingAddress.address.LastName }, { name: 'address.Company', value: shippingAddress.address.Company }, { name: 'address.Street1', value: shippingAddress.address.Street1 }, { name: 'address.Street2', value: shippingAddress.address.Street2 }, { name: 'address.Country', value: shippingAddress.address.Country }, { name: 'address.State', value: shippingAddress.address.State }, { name: 'address.City', value: shippingAddress.address.City }, { name: 'address.CityId', value: shippingAddress.address.CityId }, { name: 'address.PostalCode', value: shippingAddress.address.PostalCode }, { name: 'address.Phone', value: shippingAddress.address.Phone }, { name: 'address.PhoneMobile', value: shippingAddress.address.PhoneMobile }, { name: 'address.Email', value: shippingAddress.address.Email }, { name: 'address.Latitude', value: shippingAddress.address.Latitude }, { name: 'address.Longitude', value: shippingAddress.address.Longitude }, { name: 'address.Id', value: shippingAddress.address.Id }, { name: 'id', value: shippingAddress.id }, { name: 'userId', value: shippingAddress.userId }, { name: 'addressId', value: shippingAddress.addressId }, { name: 'isDefault', value: shippingAddress.isDefault }, { name: 'type', value: shippingAddress.type }, { name: 'address.FirstName', value: shippingAddress.address.FirstName }, { name: 'address.LastName', value: shippingAddress.address.LastName }, { name: 'address.Company', value: shippingAddress.address.Company }, { name: 'address.Street1', value: shippingAddress.address.Street1 }, { name: 'address.Street2', value: shippingAddress.address.Street2 }, { name: 'address.Country', value: shippingAddress.address.Country }, { name: 'address.State', value: shippingAddress.address.State }, { name: 'address.City', value: shippingAddress.address.City }, { name: 'address.CityId', value: shippingAddress.address.CityId }, { name: 'address.PostalCode', value: shippingAddress.address.PostalCode }, { name: 'address.Phone', value: shippingAddress.address.Phone }, { name: 'address.PhoneMobile', value: shippingAddress.address.PhoneMobile }, { name: 'address.Email', value: shippingAddress.address.Email }, { name: 'address.Latitude', value: shippingAddress.address.Latitude }, { name: 'address.Longitude', value: shippingAddress.address.Longitude }, { name: 'address.Id', value: shippingAddress.address.Id }, { name: 'id', value: shippingAddress.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'session'
  (function(){

    abp.services.app.session = abp.services.app.session || {};

    // action 'getCurrentLoginInformations'
    abp.services.app.session.getCurrentLoginInformations = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Session/GetCurrentLoginInformations',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'role'
  (function(){

    abp.services.app.role = abp.services.app.role || {};

    // action 'create'
    abp.services.app.role.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getRoles'
    abp.services.app.role.getRoles = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetRolesAsync' + abp.utils.buildQueryString([{ name: 'permission', value: input.permission }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.role.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.role['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.role.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllPermissions'
    abp.services.app.role.getAllPermissions = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetAllPermissions',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getRoleForEdit'
    abp.services.app.role.getRoleForEdit = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetRoleForEdit' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.role.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetAll' + abp.utils.buildQueryString([{ name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'dealOfTheDay'
  (function(){

    abp.services.app.dealOfTheDay = abp.services.app.dealOfTheDay || {};

    // action 'getDealOfTheDay'
    abp.services.app.dealOfTheDay.getDealOfTheDay = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DealOfTheDay/GetDealOfTheDay',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.dealOfTheDay.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DealOfTheDay/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.dealOfTheDay.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DealOfTheDay/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.dealOfTheDay.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DealOfTheDay/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.dealOfTheDay.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DealOfTheDay/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.dealOfTheDay['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DealOfTheDay/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

  })();

  // controller 'product'
  (function(){

    abp.services.app.product = abp.services.app.product || {};

    // action 'getBySlug'
    abp.services.app.product.getBySlug = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/GetBySlug' + abp.utils.buildQueryString([{ name: 'input', value: input }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getBySlugForProductDetail'
    abp.services.app.product.getBySlugForProductDetail = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/GetBySlugForProductDetail' + abp.utils.buildQueryString([{ name: 'input', value: input }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getBySlugForProductQuickView'
    abp.services.app.product.getBySlugForProductQuickView = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/GetBySlugForProductQuickView' + abp.utils.buildQueryString([{ name: 'input', value: input }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getByReferenceId'
    abp.services.app.product.getByReferenceId = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/GetByReferenceId' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.product.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'setStoreAndPrice'
    abp.services.app.product.setStoreAndPrice = function(productId, tenantId, newPrice, startingPrice, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/SetStoreAndPrice' + abp.utils.buildQueryString([{ name: 'productId', value: productId }, { name: 'tenantId', value: tenantId }, { name: 'newPrice', value: newPrice }, { name: 'startingPrice', value: startingPrice }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'setSoldStatus'
    abp.services.app.product.setSoldStatus = function(productId, isSold, qty, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/SetSoldStatus' + abp.utils.buildQueryString([{ name: 'productId', value: productId }, { name: 'isSold', value: isSold }, { name: 'qty', value: qty }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'createOrUpdate'
    abp.services.app.product.createOrUpdate = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/CreateOrUpdate',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'verifyProduct'
    abp.services.app.product.verifyProduct = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/VerifyProduct',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'removeImage'
    abp.services.app.product.removeImage = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/RemoveImage' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'removeProductImages'
    abp.services.app.product.removeProductImages = function(productId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/RemoveProductImages' + abp.utils.buildQueryString([{ name: 'productId', value: productId }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.product['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'searchProducts'
    abp.services.app.product.searchProducts = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/SearchProducts',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'searchPromotionalandDealsProducts'
    abp.services.app.product.searchPromotionalandDealsProducts = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/SearchPromotionalandDealsProducts',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.product.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'status', value: input.status }, { name: 'categoryId', value: input.categoryId }, { name: 'priceRangeFrom', value: input.priceRangeFrom }, { name: 'priceRangeTo', value: input.priceRangeTo }, { name: 'categorySlug', value: input.categorySlug }, { name: 'store', value: input.store }, { name: 'brand', value: input.brand }, { name: 'productSlug', value: input.productSlug }, { name: 'dealOfTheDayId', value: input.dealOfTheDayId }, { name: 'showDeals', value: input.showDeals }, { name: 'ringsize', value: input.ringsize }, { name: 'ringmetaltype', value: input.ringmetaltype }, { name: 'isproductcall', value: input.isproductcall }, { name: 'selectedCategories', value: input.selectedCategories }, { name: 'selectedManufacturers', value: input.selectedManufacturers }, { name: 'selectedTenants', value: input.selectedTenants }, { name: 'productAttributes', value: input.productAttributes }, { name: 'sortBy', value: input.sortBy }, { name: 'productType', value: input.productType }, { name: 'isPromotional', value: input.isPromotional }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'fetchNewArrivals'
    abp.services.app.product.fetchNewArrivals = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/FetchNewArrivals',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getRelatedProducts'
    abp.services.app.product.getRelatedProducts = function(categorySlug, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/GetRelatedProducts' + abp.utils.buildQueryString([{ name: 'categorySlug', value: categorySlug }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllProduct'
    abp.services.app.product.getAllProduct = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/GetAllProduct' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'status', value: input.status }, { name: 'categoryId', value: input.categoryId }, { name: 'priceRangeFrom', value: input.priceRangeFrom }, { name: 'priceRangeTo', value: input.priceRangeTo }, { name: 'categorySlug', value: input.categorySlug }, { name: 'store', value: input.store }, { name: 'brand', value: input.brand }, { name: 'productSlug', value: input.productSlug }, { name: 'dealOfTheDayId', value: input.dealOfTheDayId }, { name: 'showDeals', value: input.showDeals }, { name: 'ringsize', value: input.ringsize }, { name: 'ringmetaltype', value: input.ringmetaltype }, { name: 'isproductcall', value: input.isproductcall }, { name: 'selectedCategories', value: input.selectedCategories }, { name: 'selectedManufacturers', value: input.selectedManufacturers }, { name: 'selectedTenants', value: input.selectedTenants }, { name: 'productAttributes', value: input.productAttributes }, { name: 'sortBy', value: input.sortBy }, { name: 'productType', value: input.productType }, { name: 'isPromotional', value: input.isPromotional }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getTitles'
    abp.services.app.product.getTitles = function(query, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/GetTitles' + abp.utils.buildQueryString([{ name: 'query', value: query }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getMaxPrice'
    abp.services.app.product.getMaxPrice = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Product/GetMaxPrice',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'productAttribute'
  (function(){

    abp.services.app.productAttribute = abp.services.app.productAttribute || {};

    // action 'delete'
    abp.services.app.productAttribute['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ProductAttribute/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.productAttribute.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ProductAttribute/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.productAttribute.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ProductAttribute/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.productAttribute.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ProductAttribute/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'selectionMode', value: input.selectionMode }, { name: 'categoryId', value: input.categoryId }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSearchableAttributes'
    abp.services.app.productAttribute.getSearchableAttributes = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ProductAttribute/GetSearchableAttributes',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getByCategoryId'
    abp.services.app.productAttribute.getByCategoryId = function(categoryId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ProductAttribute/GetByCategoryId' + abp.utils.buildQueryString([{ name: 'categoryId', value: categoryId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.productAttribute.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ProductAttribute/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'productAttributePreDefinedValue'
  (function(){

    abp.services.app.productAttributePreDefinedValue = abp.services.app.productAttributePreDefinedValue || {};

    // action 'create'
    abp.services.app.productAttributePreDefinedValue.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ProductAttributePreDefinedValue/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.productAttributePreDefinedValue.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ProductAttributePreDefinedValue/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.productAttributePreDefinedValue['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ProductAttributePreDefinedValue/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.productAttributePreDefinedValue.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ProductAttributePreDefinedValue/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'productAttributeId', value: input.productAttributeId }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.productAttributePreDefinedValue.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ProductAttributePreDefinedValue/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'category'
  (function(){

    abp.services.app.category = abp.services.app.category || {};

    // action 'delete'
    abp.services.app.category['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'getCategoryOfTheMonth'
    abp.services.app.category.getCategoryOfTheMonth = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/GetCategoryOfTheMonth',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getDashboardCategories'
    abp.services.app.category.getDashboardCategories = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/GetDashboardCategories',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getTop5DashboardCategories'
    abp.services.app.category.getTop5DashboardCategories = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/GetTop5DashboardCategories',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getTopDashboardCategories'
    abp.services.app.category.getTopDashboardCategories = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/GetTopDashboardCategories',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getMenuCategories'
    abp.services.app.category.getMenuCategories = function(parentSlug, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/GetMenuCategories' + abp.utils.buildQueryString([{ name: 'parentSlug', value: parentSlug }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllCategories'
    abp.services.app.category.getAllCategories = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/GetAllCategories',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getBySlug'
    abp.services.app.category.getBySlug = function(slug, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/GetBySlug' + abp.utils.buildQueryString([{ name: 'slug', value: slug }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSubCategoriesBySlug'
    abp.services.app.category.getSubCategoriesBySlug = function(slug, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/GetSubCategoriesBySlug' + abp.utils.buildQueryString([{ name: 'slug', value: slug }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'updateTopCategory'
    abp.services.app.category.updateTopCategory = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/UpdateTopCategory',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'updateDashboardCategory'
    abp.services.app.category.updateDashboardCategory = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/UpdateDashboardCategory',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'updateMenuCategory'
    abp.services.app.category.updateMenuCategory = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/UpdateMenuCategory',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'searchAll'
    abp.services.app.category.searchAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/SearchAll',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.category.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'isDashboardCategory', value: input.isDashboardCategory }, { name: 'parentId', value: input.parentId }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'addProductCategoryCountJob'
    abp.services.app.category.addProductCategoryCountJob = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/AddProductCategoryCountJob' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.category.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.category.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.category.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Category/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

  })();

  // controller 'contactUs'
  (function(){

    abp.services.app.contactUs = abp.services.app.contactUs || {};

    // action 'create'
    abp.services.app.contactUs.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ContactUs/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.contactUs.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ContactUs/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.contactUs.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ContactUs/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.contactUs.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ContactUs/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.contactUs['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ContactUs/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

  })();

  // controller 'shippingBox'
  (function(){

    abp.services.app.shippingBox = abp.services.app.shippingBox || {};

    // action 'create'
    abp.services.app.shippingBox.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingBox/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.shippingBox.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingBox/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.shippingBox['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingBox/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.shippingBox.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingBox/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.shippingBox.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingBox/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'manufacturer'
  (function(){

    abp.services.app.manufacturer = abp.services.app.manufacturer || {};

    // action 'getAll'
    abp.services.app.manufacturer.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Manufacturer/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.manufacturer.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Manufacturer/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.manufacturer.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Manufacturer/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.manufacturer.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Manufacturer/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.manufacturer['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Manufacturer/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

  })();

  // controller 'webHookActionResult'
  (function(){

    abp.services.app.webHookActionResult = abp.services.app.webHookActionResult || {};

    // action 'getMissingOrders'
    abp.services.app.webHookActionResult.getMissingOrders = function(from, to, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WebHookActionResult/GetMissingOrders' + abp.utils.buildQueryString([{ name: 'from', value: from }, { name: 'to', value: to }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.webHookActionResult.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WebHookActionResult/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'isSuccess', value: input.isSuccess }, { name: 'fromDate', value: input.fromDate }, { name: 'toDate', value: input.toDate }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.webHookActionResult.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WebHookActionResult/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.webHookActionResult.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WebHookActionResult/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.webHookActionResult.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WebHookActionResult/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.webHookActionResult['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WebHookActionResult/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

  })();

  // controller 'sMS'
  (function(){

    abp.services.app.sMS = abp.services.app.sMS || {};

    // action 'sendSms'
    abp.services.app.sMS.sendSms = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SMS/SendSms',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'twilioResponse'
    abp.services.app.sMS.twilioResponse = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SMS/TwilioResponse',
        type: 'POST',
        headers: {
          'request': request,
        }
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.sMS.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SMS/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.sMS.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SMS/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.sMS.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SMS/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.sMS.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SMS/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.sMS['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SMS/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

  })();

  // controller 'taxRate'
  (function(){

    abp.services.app.taxRate = abp.services.app.taxRate || {};

    // action 'getAll'
    abp.services.app.taxRate.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/TaxRate/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.taxRate.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/TaxRate/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.taxRate.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/TaxRate/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.taxRate.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/TaxRate/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.taxRate['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/TaxRate/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

  })();

  // controller 'shippingService'
  (function(){

    abp.services.app.shippingService = abp.services.app.shippingService || {};

    // action 'create'
    abp.services.app.shippingService.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingService/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.shippingService.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingService/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.shippingService['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingService/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.shippingService.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingService/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.shippingService.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingService/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'shippingCarrier'
  (function(){

    abp.services.app.shippingCarrier = abp.services.app.shippingCarrier || {};

    // action 'get'
    abp.services.app.shippingCarrier.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingCarrier/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.shippingCarrier.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingCarrier/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.shippingCarrier.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingCarrier/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.shippingCarrier.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingCarrier/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.shippingCarrier['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ShippingCarrier/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

  })();

  // controller 'pagesRedirect'
  (function(){

    abp.services.app.pagesRedirect = abp.services.app.pagesRedirect || {};

    // action 'delete'
    abp.services.app.pagesRedirect['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PagesRedirect/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.pagesRedirect.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PagesRedirect/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.pagesRedirect.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PagesRedirect/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.pagesRedirect.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PagesRedirect/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.pagesRedirect.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/PagesRedirect/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'newsLetterSubscription'
  (function(){

    abp.services.app.newsLetterSubscription = abp.services.app.newsLetterSubscription || {};

    // action 'create'
    abp.services.app.newsLetterSubscription.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/NewsLetterSubscription/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.newsLetterSubscription.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/NewsLetterSubscription/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.newsLetterSubscription.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/NewsLetterSubscription/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.newsLetterSubscription.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/NewsLetterSubscription/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.newsLetterSubscription['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/NewsLetterSubscription/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

  })();

  // controller 'menu'
  (function(){

    abp.services.app.menu = abp.services.app.menu || {};

    // action 'create'
    abp.services.app.menu.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.menu.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getMenuItems'
    abp.services.app.menu.getMenuItems = function(type, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/GetMenuItems' + abp.utils.buildQueryString([{ name: 'type', value: type }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.menu['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.menu.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.menu.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'menuItem'
  (function(){

    abp.services.app.menuItem = abp.services.app.menuItem || {};

    // action 'getMenuItemsByMenuId'
    abp.services.app.menuItem.getMenuItemsByMenuId = function(menuId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MenuItem/GetMenuItemsByMenuId' + abp.utils.buildQueryString([{ name: 'menuId', value: menuId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.menuItem.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MenuItem/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.menuItem.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MenuItem/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.menuItem['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MenuItem/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.menuItem.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MenuItem/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'menuId', value: input.menuId }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.menuItem.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MenuItem/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'homepageBanner'
  (function(){

    abp.services.app.homepageBanner = abp.services.app.homepageBanner || {};

    // action 'getHomepageBanner'
    abp.services.app.homepageBanner.getHomepageBanner = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/HomepageBanner/GetHomepageBanner',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'addHomepageBanner'
    abp.services.app.homepageBanner.addHomepageBanner = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/HomepageBanner/AddHomepageBanner',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.homepageBanner.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/HomepageBanner/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.homepageBanner.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/HomepageBanner/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.homepageBanner.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/HomepageBanner/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.homepageBanner.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/HomepageBanner/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.homepageBanner['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/HomepageBanner/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

  })();

  // controller 'logToFile'
  (function(){

    abp.services.app.logToFile = abp.services.app.logToFile || {};

    // action 'log'
    abp.services.app.logToFile.log = function(body, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/LogToFile/Log' + abp.utils.buildQueryString([{ name: 'body', value: body }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

  })();

  // controller 'discountRule'
  (function(){

    abp.services.app.discountRule = abp.services.app.discountRule || {};

    // action 'getByCode'
    abp.services.app.discountRule.getByCode = function(code, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DiscountRule/GetByCode' + abp.utils.buildQueryString([{ name: 'code', value: code }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.discountRule.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DiscountRule/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.discountRule.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DiscountRule/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.discountRule['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DiscountRule/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.discountRule.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DiscountRule/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.discountRule.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DiscountRule/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'dropdown'
  (function(){

    abp.services.app.dropdown = abp.services.app.dropdown || {};

    // action 'getAllStateDropdown'
    abp.services.app.dropdown.getAllStateDropdown = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dropdown/GetAllStateDropdown',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllRingSizesDropdown'
    abp.services.app.dropdown.getAllRingSizesDropdown = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dropdown/GetAllRingSizesDropdown',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllMetalTypeDropdown'
    abp.services.app.dropdown.getAllMetalTypeDropdown = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dropdown/GetAllMetalTypeDropdown',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllCityDropdown'
    abp.services.app.dropdown.getAllCityDropdown = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dropdown/GetAllCityDropdown',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getCityDropdown'
    abp.services.app.dropdown.getCityDropdown = function(stateId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dropdown/GetCityDropdown' + abp.utils.buildQueryString([{ name: 'stateId', value: stateId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllParentCategoryDropdown'
    abp.services.app.dropdown.getAllParentCategoryDropdown = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dropdown/GetAllParentCategoryDropdown',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllCategoryDropdown'
    abp.services.app.dropdown.getAllCategoryDropdown = function(parentId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dropdown/GetAllCategoryDropdown' + abp.utils.buildQueryString([{ name: 'parentId', value: parentId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getManufacturerDropdownByProducts'
    abp.services.app.dropdown.getManufacturerDropdownByProducts = function(products, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dropdown/GetManufacturerDropdownByProducts' + abp.utils.buildQueryString([{ name: 'products', value: products }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getProductManufacturerDropdown'
    abp.services.app.dropdown.getProductManufacturerDropdown = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dropdown/GetProductManufacturerDropdown',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllManufacturerDropdown'
    abp.services.app.dropdown.getAllManufacturerDropdown = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dropdown/GetAllManufacturerDropdown',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSearchableTenantDropdown'
    abp.services.app.dropdown.getSearchableTenantDropdown = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dropdown/GetSearchableTenantDropdown',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllTenantDropdown'
    abp.services.app.dropdown.getAllTenantDropdown = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dropdown/GetAllTenantDropdown',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllShippingBoxDropdown'
    abp.services.app.dropdown.getAllShippingBoxDropdown = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dropdown/GetAllShippingBoxDropdown',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPagesDropdown'
    abp.services.app.dropdown.getPagesDropdown = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dropdown/GetPagesDropdown',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getBlogCategoryDropdown'
    abp.services.app.dropdown.getBlogCategoryDropdown = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dropdown/GetBlogCategoryDropdown',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'dynamicPage'
  (function(){

    abp.services.app.dynamicPage = abp.services.app.dynamicPage || {};

    // action 'addPagePostContentImage'
    abp.services.app.dynamicPage.addPagePostContentImage = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DynamicPage/AddPagePostContentImage',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.dynamicPage.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DynamicPage/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.dynamicPage.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DynamicPage/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getBySlug'
    abp.services.app.dynamicPage.getBySlug = function(slug, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DynamicPage/GetBySlug' + abp.utils.buildQueryString([{ name: 'slug', value: slug }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.dynamicPage['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DynamicPage/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.dynamicPage.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DynamicPage/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllPages'
    abp.services.app.dynamicPage.getAllPages = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DynamicPage/GetAllPages',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.dynamicPage.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/DynamicPage/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'order'
  (function(){

    abp.services.app.order = abp.services.app.order || {};

    // action 'create'
    abp.services.app.order.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Order/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'createMissingOrder'
    abp.services.app.order.createMissingOrder = function(createMissingOrderDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Order/CreateMissingOrder',
        type: 'POST',
        data: JSON.stringify(createMissingOrderDto)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.order['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Order/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.order.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Order/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'searchAll'
    abp.services.app.order.searchAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Order/SearchAll',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.order.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Order/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'status', value: input.status }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.order.getById = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Order/GetById' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getMissingOrders'
    abp.services.app.order.getMissingOrders = function(from, to, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Order/GetMissingOrders' + abp.utils.buildQueryString([{ name: 'from', value: from }, { name: 'to', value: to }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getByOrderNo'
    abp.services.app.order.getByOrderNo = function(orderNo, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Order/GetByOrderNo' + abp.utils.buildQueryString([{ name: 'orderNo', value: orderNo }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'createReturnOrder'
    abp.services.app.order.createReturnOrder = function(orderReturnDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Order/CreateReturnOrder',
        type: 'POST',
        data: JSON.stringify(orderReturnDto)
      }, ajaxParams));;
    };

    // action 'isAlreadyReturn'
    abp.services.app.order.isAlreadyReturn = function(orderId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Order/IsAlreadyReturn' + abp.utils.buildQueryString([{ name: 'orderId', value: orderId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.order.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Order/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'tenant'
  (function(){

    abp.services.app.tenant = abp.services.app.tenant || {};

    // action 'get'
    abp.services.app.tenant.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.tenant.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/GetAll' + abp.utils.buildQueryString([{ name: 'keyword', value: input.keyword }, { name: 'isActive', value: input.isActive }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.tenant.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.tenant.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.tenant['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'getStoreInfoByStoreId'
    abp.services.app.tenant.getStoreInfoByStoreId = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/GetStoreInfoByStoreId' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'quote'
  (function(){

    abp.services.app.quote = abp.services.app.quote || {};

    // action 'getQuoteCategories'
    abp.services.app.quote.getQuoteCategories = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/GetQuoteCategories',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'addQuoteImages'
    abp.services.app.quote.addQuoteImages = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/AddQuoteImages',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'markDeletedQuoteImages'
    abp.services.app.quote.markDeletedQuoteImages = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/MarkDeletedQuoteImages',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'addOrUpdateQuoteImages'
    abp.services.app.quote.addOrUpdateQuoteImages = function(files, creatorUserId, quoteId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/AddOrUpdateQuoteImages' + abp.utils.buildQueryString([{ name: 'creatorUserId', value: creatorUserId }, { name: 'quoteId', value: quoteId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'addPartialQuote'
    abp.services.app.quote.addPartialQuote = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/AddPartialQuote',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'updateEmailSubscription'
    abp.services.app.quote.updateEmailSubscription = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/UpdateEmailSubscription' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'PUT'
      }, ajaxParams));;
    };

    // action 'deletePartialQuote'
    abp.services.app.quote.deletePartialQuote = function(email, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/DeletePartialQuote' + abp.utils.buildQueryString([{ name: 'email', value: email }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.quote.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getLastQuoteByUserId'
    abp.services.app.quote.getLastQuoteByUserId = function(userId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/GetLastQuoteByUserId' + abp.utils.buildQueryString([{ name: 'userId', value: userId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.quote['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.quote.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/GetAll' + abp.utils.buildQueryString([{ name: 'status', value: input.status }, { name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'emailAddress', value: input.emailAddress }, { name: 'partyId', value: input.partyId }, { name: 'mobile', value: input.mobile }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllQuotes'
    abp.services.app.quote.getAllQuotes = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/GetAllQuotes' + abp.utils.buildQueryString([{ name: 'status', value: input.status }, { name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'emailAddress', value: input.emailAddress }, { name: 'partyId', value: input.partyId }, { name: 'mobile', value: input.mobile }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getQuoteByPhonenumber'
    abp.services.app.quote.getQuoteByPhonenumber = function(phoneNumber, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/GetQuoteByPhonenumber' + abp.utils.buildQueryString([{ name: 'phoneNumber', value: phoneNumber }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getQuoteByEmail'
    abp.services.app.quote.getQuoteByEmail = function(email, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/GetQuoteByEmail' + abp.utils.buildQueryString([{ name: 'email', value: email }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getQuoteImagesByQuoteId'
    abp.services.app.quote.getQuoteImagesByQuoteId = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/GetQuoteImagesByQuoteId' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'addQuoteEmailLog'
    abp.services.app.quote.addQuoteEmailLog = function(to, returnValue, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/AddQuoteEmailLog' + abp.utils.buildQueryString([{ name: 'to', value: to }, { name: 'returnValue', value: returnValue }]) + '',
        type: 'POST',
        dataType: null
      }, ajaxParams));;
    };

    // action 'removeImageByName'
    abp.services.app.quote.removeImageByName = function(fileName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/RemoveImageByName' + abp.utils.buildQueryString([{ name: 'fileName', value: fileName }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setQuoteStatus'
    abp.services.app.quote.setQuoteStatus = function(quoteId, status, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/SetQuoteStatus' + abp.utils.buildQueryString([{ name: 'quoteId', value: quoteId }, { name: 'status', value: status }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.quote.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.quote.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Quote/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

  })();

  // controller 'quoteCommunication'
  (function(){

    abp.services.app.quoteCommunication = abp.services.app.quoteCommunication || {};

    // action 'create'
    abp.services.app.quoteCommunication.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/QuoteCommunication/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.quoteCommunication.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/QuoteCommunication/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'quoteId', value: input.quoteId }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getCustomerChat'
    abp.services.app.quoteCommunication.getCustomerChat = function(quoteId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/QuoteCommunication/GetCustomerChat' + abp.utils.buildQueryString([{ name: 'quoteId', value: quoteId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.quoteCommunication.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/QuoteCommunication/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.quoteCommunication.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/QuoteCommunication/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.quoteCommunication['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/QuoteCommunication/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

  })();

  // controller 'quoteItemCondition'
  (function(){

    abp.services.app.quoteItemCondition = abp.services.app.quoteItemCondition || {};

    // action 'getAll'
    abp.services.app.quoteItemCondition.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/QuoteItemCondition/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.quoteItemCondition.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/QuoteItemCondition/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'create'
    abp.services.app.quoteItemCondition.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/QuoteItemCondition/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.quoteItemCondition.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/QuoteItemCondition/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.quoteItemCondition['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/QuoteItemCondition/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

  })();

  // controller 'configuration'
  (function(){

    abp.services.app.configuration = abp.services.app.configuration || {};

    // action 'changeUiTheme'
    abp.services.app.configuration.changeUiTheme = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Configuration/ChangeUiTheme',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

  })();

  // controller 'blogCategory'
  (function(){

    abp.services.app.blogCategory = abp.services.app.blogCategory || {};

    // action 'create'
    abp.services.app.blogCategory.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogCategory/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.blogCategory.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogCategory/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.blogCategory.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogCategory/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.blogCategory.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogCategory/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.blogCategory['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogCategory/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

  })();

  // controller 'blogPost'
  (function(){

    abp.services.app.blogPost = abp.services.app.blogPost || {};

    // action 'addBlogPostContentImage'
    abp.services.app.blogPost.addBlogPostContentImage = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogPost/AddBlogPostContentImage',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'createOrUpdate'
    abp.services.app.blogPost.createOrUpdate = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogPost/CreateOrUpdate',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getBySlug'
    abp.services.app.blogPost.getBySlug = function(slug, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogPost/GetBySlug' + abp.utils.buildQueryString([{ name: 'slug', value: slug }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getAllBlogPosts'
    abp.services.app.blogPost.getAllBlogPosts = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogPost/GetAllBlogPosts' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'categorySlug', value: input.categorySlug }, { name: 'keyword', value: input.keyword }, { name: 'isActive', value: input.isActive }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.blogPost.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogPost/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.blogPost['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogPost/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.blogPost.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogPost/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'categorySlug', value: input.categorySlug }, { name: 'keyword', value: input.keyword }, { name: 'isActive', value: input.isActive }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'blogPostComment'
  (function(){

    abp.services.app.blogPostComment = abp.services.app.blogPostComment || {};

    // action 'create'
    abp.services.app.blogPostComment.create = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogPostComment/Create',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'update'
    abp.services.app.blogPostComment.update = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogPostComment/Update',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getAll'
    abp.services.app.blogPostComment.getAll = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogPostComment/GetAll' + abp.utils.buildQueryString([{ name: 'sorting', value: input.sorting }, { name: 'keyword', value: input.keyword }, { name: 'skipCount', value: input.skipCount }, { name: 'maxResultCount', value: input.maxResultCount }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'get'
    abp.services.app.blogPostComment.get = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogPostComment/Get' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'delete'
    abp.services.app.blogPostComment['delete'] = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/BlogPostComment/Delete' + abp.utils.buildQueryString([{ name: 'id', value: input.id }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

  })();

  // controller 'account'
  (function(){

    abp.services.app.account = abp.services.app.account || {};

    // action 'register'
    abp.services.app.account.register = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Account/Register',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'updatePassword'
    abp.services.app.account.updatePassword = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Account/UpdatePassword',
        type: 'PUT',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'getLookupParty'
    abp.services.app.account.getLookupParty = function(partyEmail, mobileNumber, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Account/GetLookupParty' + abp.utils.buildQueryString([{ name: 'partyEmail', value: partyEmail }, { name: 'mobileNumber', value: mobileNumber }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'forgotPassword'
    abp.services.app.account.forgotPassword = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Account/ForgotPassword',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'sendResetPasswordEmail'
    abp.services.app.account.sendResetPasswordEmail = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Account/SendResetPasswordEmail',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

    // action 'sendOTP'
    abp.services.app.account.sendOTP = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Account/SendOTP',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));;
    };

  })();

})();
